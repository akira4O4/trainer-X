project_config:
  task: classification
  work_dir: project/suzou_sapa_zifu
  topk: 2
  print_freq: 50

train_config:
  seed: 0
  epoch: 0
  max_epoch: 100
  print_freq: 10
  workflow: [[train, 1], [val, 1]]
  deterministic: true
  scheduler_step_batch: true

model_config:
  model_name: shufflenet_v2_x1_0
  num_classes: 3
  pretrained: False
  model_path: /home/seeking/llf/code/deep_learning_framework/project/suzou_sapa_zifu/weights/20230616(181921)_Epoch17_BestAcc99.8639_lr0.000145_BestModel.pth
  gpu: 1 # -1==cpu
  strict: True
  map_location: cpu

classification_data_config:
  train:
    dataset_params:
      root: /media/seeking/data/llf/suzou_sapa/sapa_zifu/data/train
      wh: [500, 500]
      letterbox: true
    dataloader_params:
      batch_size: 128
      shuffle: False
      num_workers: 6
      pin_memory: True
      batch_sampler: BalancedBatchSampler #default:None

  val:
    dataset_params:
      root: /media/seeking/data/llf/suzou_sapa/sapa_zifu/data/val
      wh: [500, 500]
      letterbox: true
    dataloader_params:
      batch_size: 8
      shuffle: false
      num_workers: 4
      pin_memory: True

optimizer_config:
  name: AdamW
  params:
    lr: 0.0002

lr_config:
  # name: LambdaLR
  # params:
  # lr_lambda: "lambda epoch: 1 / (epoch / 4 + 1)" #hook call
  name: CosineAnnealingWarmRestarts
  params:
    T_0: 10
    T_mult: 2

loss_config:
  loss_weights: [1]
  classification:
    CrossEntropyLoss: {}


ddp_config:
  flag: false
  batch_size: 64
  num_workers: 8
  backend: nccl
  init_method: env://
  rank: 0
  local_rank: 0
  world_size: 1
  # cuda_visible_device: [ 0,1 ]
  sync_bn: false

test_config:
  test_dir: /media/seeking/data/llf/suzou_sapa/sapa_zifu/data/val/1pmhuashanghuapo
  # test_dir: /media/seeking/data/llf/gzsapa_dataset/segmentation/val
  weight: /home/seeking/llf/code/deep_learning_framework/project/suzou_sapa_zifu/weights/20230616(181921)_Epoch17_BestAcc99.8639_lr0.000145_BestModel.pth  
  # weight: /home/seeking/llf/code/deep_learning_framework/project/suzou_sapa_zifu/weights/checkpoint.pth  
  # batch_size: 1
  good_idx: 0
  sum_method: true
  need_segment: false
  cls_threshold: [0.05, 0, 0]
  seg_threshold: [0, 36, 50, 36]
